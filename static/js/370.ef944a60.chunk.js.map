{"version":3,"file":"static/js/370.ef944a60.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","model/utils.ts","model/types.ts","model/model.ts","runtime/generator.ts","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/comlink/src/comlink.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","runtime/worker.ts"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function isDefined(o: any) : boolean {\n  return typeof o !== 'undefined';\n}\n\n// add an id field to an array of objects based on their index\n// will NOT create/copy objects\n// the returned array will be a new one (different from the original)\n// but the content will be the same\nfunction addId(arr: any[], key=\"iid\"): any[] {\n  return arr.map((d, idx) => {\n    d[key] = idx;\n    return d;\n  });\n}\n\n// this does not work when n is large as Number is JavaScript is float64\n// and it will run out of precision quickly\n// // assume n >= 0\n// let _factorialCache = [1, 1];\n// function factorial(n) {\n//   if (_factorialCache.length > n) {\n//     return _factorialCache[n];\n//   } else {\n//     if (n === 0 || n === 1) {\n//       return 1;\n//     } else {\n//       const lastN = _factorialCache.length - 1;\n//       const lastValue = _factorialCache[_factorialCache.length - 1];\n//       let res = lastValue;\n//       for (let i = lastN + 1; i <= n; i++) {\n//         res *= i;\n//         _factorialCache.push(res);\n//       }\n//       return res;\n//     }\n//   }\n// }\n\n// n choose k\nfunction choose(n: number, k: number): number {\n  k = Math.min(n - k, k);\n  let res = 1;\n  for (let i = 1; i <= k; i++) {\n    res *= n - k + i;\n    res /= i;\n  }\n  return res;\n}\n\n// Select the 'index'th combination of k over n\nfunction indexedCombination(n: number, k: number, index: number): number[] {\n  let result = [];\n  for (let item = 0; item < n + 1; item++) {\n    const n_ = n - item;\n    const pivot = choose(n_ - 1, k - 1);\n    if (index < pivot) {\n      result.push(item);\n      k -= 1;\n      if (k <= 0) {\n        break\n      }\n    } else {\n      index -= pivot;\n    }\n  }\n  return result;\n}\n\n// Return the index of combination (length == k)\nfunction combinationIndex(combination: number[], n: number): number {\n  const k = combination.length;\n  n -= 1;\n  let index = 0;\n  let item_in_check = 0;\n\n  for (let i = 0; i < k; i++) {\n    const offset = i + 1;\n    const item = combination[i];\n    while (item_in_check < item) {\n      index += choose(n - item_in_check, k - offset);\n      item_in_check += 1;\n    }\n    item_in_check += 1;\n  }\n  return index;\n}\n\n// reservoir-sampling, sample k data point from a stream of a unknown length\nclass StreamSampler<T> {\n  private readonly k: number;\n  private readonly randFn: () => number;\n  private readonly r: T[];\n  private i: number;\n  private finished: boolean;\n\n  constructor(k : number, randFn : () => number = Math.random) {\n    this.k = k;\n    this.randFn = randFn;\n    this.r = [];\n    this.i = 0;\n    this.finished = false;\n  }\n\n  // call this function to add a new data point\n  next(data: T): void {\n    if (this.finished) {\n      console.log(\"warning: call next after finalSample\");\n    }\n    if (isDefined(data)) {\n      if (this.r.length < this.k) {\n        this.r.push(data);\n      } else {\n        // a random number between [0, i] inclusive\n        const j = Math.floor(this.randFn() * (this.i + 1));\n        if (j < this.k) {\n          this.r[j] = data;\n        }\n      }\n      this.i += 1;\n    }\n  }\n\n  // call this function to read the current sample\n  // note that the order of the sample will be based on the input order\n  // DO NOT modify the returned array\n  sample(): T[] {\n    return this.r;\n  }\n\n  // call this function to read the final state\n  // call next() after this will cause undefined behavior\n  finalSample(): T[] {\n    // TODO: shuffle the output\n    shuffleArray(this.r);\n    this.finished = true;\n    return this.r;\n  }\n}\n\n// shuffle array in-place\nfunction shuffleArray(array: any[]): void {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nexport { StreamSampler, indexedCombination, combinationIndex, choose, isDefined, addId }","// datatypes used in generator model\n\ntype Faction = \"GDI\" | \"Nod\";\ntype Building = \"Infantry\" | \"Vehicle\" | \"Air\" | \"Tech\" | \"Commandar\";\n\n// this is a incomplete list\ninterface Unit {\n  name: string;\n  faction: Faction;\n  building: Building;\n  cost: number;\n}\n\ninterface Deck {\n  faction: Faction;\n  commandar: Unit;\n  units: Unit[];\n}\n\n// generation request\ninterface Request {\n  faction: Faction | \"random\";\n  name: string;\n  validateFn: SerializedFunction<() => DeckValidationFunction>; // serialized function\n  numDecks: number,\n}\n\n// generation response\ninterface Response {\n  request: Request;\n  result: Deck[];\n  count: number;\n}\n\nclass SerializedFunction<T extends Function> {\n  readonly data: string;\n  constructor(fn: T) {\n    this.data = fn.toString();\n  }\n\n  deserialize(): T {\n    return Function(`'use strict'; return (${this.data})`)();\n  }\n\n  static deserialize<U extends Function>(sf: SerializedFunction<U>): U {\n    return Function(`'use strict'; return (${sf.data})`)();\n  }\n}\n\ntype DeckValidationFunction = (deck: Deck) => boolean;\n\n// TODO: implement iterator\ninterface DeckDB /*extends Iterable<Deck>*/ {\n  readonly units: Unit[];\n  readonly commandars: Unit[];\n  readonly size: number;\n  get: (index: number) => Deck;\n  getIndex: (deck: Deck) => number;\n}\n\ninterface DeckGenerator {\n  generate: (request: Request[]) => Response[];\n}\n\nexport type { Faction, Building, Unit, Deck, DeckDB, DeckValidationFunction, Request, Response, DeckGenerator };\nexport { SerializedFunction };\n","import { addId, choose, combinationIndex, indexedCombination, StreamSampler } from \"./utils\";\n\nimport { Faction, Building, Unit, Deck, DeckValidationFunction, Request, Response, DeckDB, DeckGenerator } from \"./types\";\nimport { SerializedFunction } from \"./types\";\n\n// Request is immutable\nclass RequestImpl implements Request {\n  readonly faction: Faction | \"random\";\n  readonly name: string;\n  readonly validateFn: SerializedFunction<() => DeckValidationFunction>;\n  readonly numDecks: number;\n\n  constructor(faction: Faction | \"random\", name: string, validateFn: SerializedFunction<() => DeckValidationFunction>, numDecks: number) {\n    this.faction = faction;\n    this.name = name;\n    this.validateFn = validateFn;\n    this.numDecks = numDecks;\n  }\n}\n\n// Session describes the run state for each request (private to generator)\n// Session is not transferrable (i.e., cannot be sent to other threads)\nclass Session {\n  readonly request: Request;\n  readonly validateFn: DeckValidationFunction;\n  readonly sampler: StreamSampler<Deck>;\n  count: number;\n\n  constructor(request: Request) {\n    // console.log(request);\n    this.request = request;\n    // use static method here since prototype method will be lost after structuredClone\n    this.validateFn = SerializedFunction.deserialize(request.validateFn)();\n    // this.validateFn = request.validateFn.deserialize()();\n    this.sampler = new StreamSampler(request.numDecks);\n    this.count = 0;\n  }\n\n  // call this method to finalize this session, it will create a Response\n  // do NOT attempt to use a session object after it has been finalized\n  finalize(): Response {\n    return new ResponseImpl(this.request, this.sampler.finalSample(), this.count);\n  }\n}\n\n// response is immutable\nclass ResponseImpl implements Response {\n  readonly request: Request;\n  readonly result: Deck[];\n  readonly count: number;\n\n  constructor(request: Request, result: Deck[], count: number) {\n    this.request = request;\n    this.result = result;\n    this.count = count;\n  }\n}\n\nclass DeckImpl implements Deck {\n  readonly faction: Faction;\n  readonly commandar: Unit;\n  readonly units: Unit[];\n\n  constructor(faction: Faction, commandar: Unit, units: Unit[]) {\n    this.faction = faction;\n    this.commandar = commandar;\n    this.units = units;\n  }\n}\n\nconst UNIT_PER_DECK = 6;\n// sort by building first, then cost, then name\nconst BUILDING_ORDER = {\"Infantry\": 0, \"Vehicle\": 1, \"Air\": 2, \"Tech\": 3, \"Commandar\": 4};\nconst ORDER_WITHIN_DECK = (a: Unit, b: Unit): number => {\n  if (BUILDING_ORDER[a.building] !== BUILDING_ORDER[b.building]) {\n    return BUILDING_ORDER[a.building] - BUILDING_ORDER[b.building];\n  } else if (a.cost !== b.cost) {\n    return a.cost - b.cost;\n  } else {\n    return a.name > b.name ? 1 : -1;\n  }\n}\n\nclass DeckDBImpl {\n  readonly units: Unit[];\n  readonly commandars: Unit[];\n  readonly size: number;\n  private readonly unitsReverseMap: Map<string, number>;\n  private readonly commandarsReverseMap: Map<string, number>;\n\n  constructor(units: Unit[], commandars: Unit[]) {\n    // sort by order within deck\n    this.units = addId(units.sort(ORDER_WITHIN_DECK));\n    // console.log(this.units);\n    this.commandars = addId(commandars);\n    this.size = choose(units.length, UNIT_PER_DECK) * commandars.length;\n    let map = new Map();\n    units.forEach((unit, index) => map.set(unit.name, index));\n    this.unitsReverseMap = map;\n    map = new Map();\n    commandars.forEach((unit, index) => map.set(unit.name, index));\n    this.commandarsReverseMap = map;\n  }\n\n  // get a deck given an index\n  get(idx: number): Deck {\n    if (idx < 0 || idx >= this.size) {\n      throw new Error(`index out of bound: ${idx} is not in range [0, ${this.size})`);\n    }\n\n    const unitsIdx = Math.floor(idx / this.commandars.length);\n    const commandarIdx = idx % this.commandars.length;\n\n    const resUnits = indexedCombination(this.units.length, UNIT_PER_DECK, unitsIdx).map(d => this.units[d]);\n    const resCommandar = this.commandars[commandarIdx];\n    return new DeckImpl(resCommandar.faction, resCommandar, resUnits);\n  }\n\n  // get the index of a deck\n  // TODO: test this method\n  getIndex(deck: Deck): number {\n    const unitsIdx = deck.units.map(d => this.unitsReverseMap.get(d.name))\n                              .filter((d): d is number => typeof d !== undefined);\n    const commandarIdx = this.commandarsReverseMap.get(deck.commandar.name);\n    if (unitsIdx.length !== UNIT_PER_DECK || commandarIdx === undefined) {\n      throw new Error(\"invalid deck or not part of this database\");\n    }\n\n    return combinationIndex(unitsIdx, this.units.length) * this.commandars.length + commandarIdx;\n  }\n\n  // there seem to be some issue with iterator types\n  // TODO: implements iterator\n  // [Symbol.iterator](): Iterator<Deck> {\n  //   let index: number = 0;\n  //   return {\n  //     next: () => {\n  //       if (index >= this.size) {\n  //         return { done: true };\n  //       } else {\n  //         const idx = index;\n  //         index += 1;\n  //         return { value: this.get(idx), done: false };\n  //       } \n  //     }\n  //   }\n  // }\n}\n\n// TODO: test this\nclass DeckDBUnion implements DeckDB {\n  readonly units: Unit[];\n  readonly commandars: Unit[];\n  readonly size: number;\n  private readonly dbs: DeckDB[];\n\n  // assume each deckDB added has no duplicate units or commandars\n  constructor(dbs: DeckDB[]) {\n    this.dbs = dbs;\n    const totalSize: number = dbs.reduce((acc, db) => { acc += db.size; return acc; }, 0);\n    this.size = totalSize;\n    let units: Unit[] = [];\n    units.concat(...this.dbs.map((db: DeckDB) => db.units));\n    this.units = units;\n    let commandars: Unit[] = [];\n    commandars.concat(...this.dbs.map((db: DeckDB) => db.commandars));\n    this.commandars = commandars;\n  }\n\n  // lookup deck sequentially in dbs\n  get(index: number): Deck {\n    if (index < 0 || index >= this.size) {\n      throw new Error(\"index out of bound\");\n    }\n    let tmpIdx = 0;\n    while (index >= this.dbs[tmpIdx].size) {\n      index -= this.dbs[tmpIdx].size;\n      tmpIdx += 1;\n    }\n    return this.dbs[tmpIdx].get(index);\n  }\n\n  getIndex(deck: Deck): number {\n    throw new Error(\"operation not supported\");\n  }\n}\n\nclass AbstractDeckGenerator implements DeckGenerator {\n  // requests is an array of Requests object\n  // deckDB is an DeckDB object\n  // assume requests has is using the faction that DeckDB contains\n  generateCustom(requests: Request[], deckDB: DeckDB): Response[] {\n    if (requests.length > 0) {\n      // console.log(\"generateCustom called\");\n      // initialize each session\n      const sessions: Session[] = requests.map(d => new Session(d));\n\n      // loop over all decks, sampling for each session\n      for (let i = 0; i < deckDB.size; i++) {\n        const deck = deckDB.get(i);\n        sessions.forEach(d => {\n          if (d.validateFn(deck)) {\n            d.sampler.next(deck);\n            d.count += 1;\n          }\n        })\n      }\n\n      return sessions.map(d => d.finalize());\n    } else {\n      return [];\n    }\n  }\n\n  generate(request: Request[]): Response[] {\n    console.log(`cannot call generate() on abstractDeckGenerator`);\n    throw new Error(`cannot call generate() on abstractDeckGenerator`);\n  }\n}\n\nexport { DeckDBImpl, DeckDBUnion, AbstractDeckGenerator };\n\n// only for debug and testing\nexport { DeckImpl, RequestImpl };\n","import { Faction, Building, Unit, Deck, DeckValidationFunction, Request, Response, DeckDB } from \"../model/types\";\nimport { AbstractDeckGenerator, DeckDBImpl, DeckDBUnion } from \"../model/model\";\n\n// actual implementation of the deck generator, plus a few useful helper methods\nclass DefaultDeckGenerator extends AbstractDeckGenerator {\n  readonly GDI_DECKS: DeckDB;\n  readonly NOD_DECKS: DeckDB;\n  readonly ALL_DECKS: DeckDB;\n\n  constructor(GDI_UNITS: Unit[], GDI_COMMANDERS: Unit[], NOD_UNITS: Unit[], NOD_COMMANDERS: Unit[]) {\n    super();\n    this.GDI_DECKS = new DeckDBImpl(GDI_UNITS, GDI_COMMANDERS);\n    this.NOD_DECKS = new DeckDBImpl(NOD_UNITS, NOD_COMMANDERS);\n    this.ALL_DECKS = new DeckDBUnion([this.GDI_DECKS, this.NOD_DECKS]);\n  }\n\n  generate(requests: Request[]): Response[] {\n    // save the index first\n    const tmp: Map<Request, number> = new Map();\n    requests.forEach((r, index) => {\n      tmp.set(r, index);\n    });\n\n    const gdiRequests: Request[] = requests.filter(r => r.faction === \"GDI\");\n    const nodRequests: Request[] = requests.filter(r => r.faction === \"Nod\");\n    const randomRequests: Request[] = requests.filter(r => r.faction === \"random\");\n\n    const gdiResponses: Response[] = this.generateCustom(gdiRequests, this.GDI_DECKS);\n    const nodResponses: Response[] = this.generateCustom(nodRequests, this.NOD_DECKS);\n    const randomResponses: Response[] = this.generateCustom(randomRequests, this.ALL_DECKS);\n\n    let responses: Response[] = [];\n    gdiResponses.forEach(r => {\n      // this works because r.request is always in the map we created\n      responses[tmp.get(r.request) as number] = r;\n    });\n    nodResponses.forEach(r => {\n      responses[tmp.get(r.request) as number] = r;\n    });\n    randomResponses.forEach(r => {\n      responses[tmp.get(r.request) as number] = r;\n    });\n    return responses;\n  }\n\n  generateAsync(requests: Request[], responseFn: (response: Response[]) => void) {\n    const responses = this.generate(requests);\n    responseFn(responses);\n  }\n\n  // convert deck to a string that uniquely identifies it\n  getDeckId(deck: Deck): string {\n    const faction = deck.faction === \"GDI\" ? \"gdi\" : \"nod\";\n    const id = deck.faction === \"GDI\" ? this.GDI_DECKS.getIndex(deck) : this.NOD_DECKS.getIndex(deck);\n    return `${faction}-${id}`;\n  }\n\n  // TODO: test this function\n  getDeck(deckID: string): Deck {\n    const pattern = /^(gdi|nod)-([0-9]+)$/i;\n    const res = pattern.exec(deckID);\n    if (res === null) {\n      throw new Error(\"invalid deckID\");\n    } else {\n      const faction = res[1];\n      const value = parseInt(res[2]);\n      if (faction === \"gdi\") {\n        return this.GDI_DECKS.get(value);\n      } else {\n        return this.NOD_DECKS.get(value);\n      }\n    }\n  }\n}\n\nexport { DefaultDeckGenerator };\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { DefaultDeckGenerator } from \"./generator\";\nimport * as Comlink from \"comlink\";\n\n// this file is intended to run as worker script\nComlink.expose(DefaultDeckGenerator);\n"],"names":["instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","call","e","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","self","ReferenceError","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","n","toString","slice","name","from","test","_toConsumableArray","isArray","iter","addId","map","d","idx","choose","k","Math","min","res","StreamSampler","randFn","random","r","finished","this","data","console","log","push","j","floor","array","shuffleArray","SerializedFunction","fn","Function","sf","Session","request","validateFn","sampler","count","deserialize","numDecks","ResponseImpl","finalSample","result","DeckImpl","faction","commandar","units","BUILDING_ORDER","ORDER_WITHIN_DECK","a","b","building","cost","DeckDBImpl","commandars","size","unitsReverseMap","commandarsReverseMap","sort","Map","forEach","unit","index","set","Error","unitsIdx","commandarIdx","resUnits","item","pivot","indexedCombination","resCommandar","deck","get","filter","undefined","combination","item_in_check","offset","combinationIndex","DeckDBUnion","dbs","totalSize","reduce","acc","db","concat","tmpIdx","DefaultDeckGenerator","subClass","superClass","create","value","Derived","hasNativeReflectConstruct","Super","NewTarget","arguments","apply","GDI_UNITS","GDI_COMMANDERS","NOD_UNITS","NOD_COMMANDERS","GDI_DECKS","NOD_DECKS","ALL_DECKS","requests","tmp","gdiRequests","nodRequests","randomRequests","gdiResponses","generateCustom","nodResponses","randomResponses","responses","responseFn","generate","id","getIndex","deckID","exec","parseInt","AbstractDeckGenerator","deckDB","sessions","next","finalize","_slicedToArray","_i","_s","_e","_arr","_n","_d","done","err","_defineProperty","_construct","Parent","args","Class","bind","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","val","transferHandlers","canHandle","serialize","MessageChannel","port1","port2","expose","port","start","createProxy","isError","message","stack","serialized","assign","ep","addEventListener","callback","ev","returnValue","path","type","argumentList","fromWireValue","parent","prop","rawValue","proxy","transfer","Promise","resolve","catch","then","toWireValue","wireValue","transferables","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","_target","requestResponseMessage","_thisArg","rawArgumentList","last","processArguments","processed","v","transferCache","WeakMap","transfers","allowArrayLike","it","F","s","f","normalCompletion","didErr","step","_e2","handler","msg","fill","Number","MAX_SAFE_INTEGER","join","l","Comlink"],"sourceRoot":""}