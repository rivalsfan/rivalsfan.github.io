{"version":3,"file":"static/js/380.b1190538.chunk.js","mappings":"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","sources":["model/utils.ts","model/types.ts","model/deck.ts","model/model.ts","model/unit.ts","runtime/generator.ts","runtime/worker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["function isDefined(o: any) : boolean {\n  return typeof o !== 'undefined';\n}\n\n// add an id field to an array of objects based on their index\n// will NOT create/copy objects\n// the returned array will be a new one (different from the original)\n// but the content will be the same\nfunction addId(arr: any[], key=\"iid\"): any[] {\n  return arr.map((d, idx) => {\n    d[key] = idx;\n    return d;\n  });\n}\n\n// this does not work when n is large as Number is JavaScript is float64\n// and it will run out of precision quickly\n// // assume n >= 0\n// let _factorialCache = [1, 1];\n// function factorial(n) {\n//   if (_factorialCache.length > n) {\n//     return _factorialCache[n];\n//   } else {\n//     if (n === 0 || n === 1) {\n//       return 1;\n//     } else {\n//       const lastN = _factorialCache.length - 1;\n//       const lastValue = _factorialCache[_factorialCache.length - 1];\n//       let res = lastValue;\n//       for (let i = lastN + 1; i <= n; i++) {\n//         res *= i;\n//         _factorialCache.push(res);\n//       }\n//       return res;\n//     }\n//   }\n// }\n\n// n choose k\nfunction choose(n: number, k: number): number {\n  k = Math.min(n - k, k);\n  let res = 1;\n  for (let i = 1; i <= k; i++) {\n    res *= n - k + i;\n    res /= i;\n  }\n  return res;\n}\n\n// Select the 'index'th combination of k over n\nfunction indexedCombination(n: number, k: number, index: number): number[] {\n  let result = [];\n  for (let item = 0; item < n + 1; item++) {\n    const n_ = n - item;\n    const pivot = choose(n_ - 1, k - 1);\n    if (index < pivot) {\n      result.push(item);\n      k -= 1;\n      if (k <= 0) {\n        break\n      }\n    } else {\n      index -= pivot;\n    }\n  }\n  return result;\n}\n\n// Return the index of combination (length == k)\nfunction combinationIndex(combination: number[], n: number): number {\n  const k = combination.length;\n  n -= 1;\n  let index = 0;\n  let item_in_check = 0;\n\n  for (let i = 0; i < k; i++) {\n    const offset = i + 1;\n    const item = combination[i];\n    while (item_in_check < item) {\n      index += choose(n - item_in_check, k - offset);\n      item_in_check += 1;\n    }\n    item_in_check += 1;\n  }\n  return index;\n}\n\n// reservoir-sampling, sample k data point from a stream of a unknown length\nclass StreamSampler<T> {\n  private readonly k: number;\n  private readonly randFn: () => number;\n  private readonly r: T[];\n  private i: number;\n  private finished: boolean;\n\n  constructor(k : number, randFn : () => number = Math.random) {\n    this.k = k;\n    this.randFn = randFn;\n    this.r = [];\n    this.i = 0;\n    this.finished = false;\n  }\n\n  // call this function to add a new data point\n  next(data: T): void {\n    if (this.finished) {\n      console.log(\"warning: call next after finalSample\");\n    }\n    if (isDefined(data)) {\n      if (this.r.length < this.k) {\n        this.r.push(data);\n      } else {\n        // a random number between [0, i] inclusive\n        const j = Math.floor(this.randFn() * (this.i + 1));\n        if (j < this.k) {\n          this.r[j] = data;\n        }\n      }\n      this.i += 1;\n    }\n  }\n\n  // call this function to read the current sample\n  // note that the order of the sample will be based on the input order\n  // DO NOT modify the returned array\n  sample(): T[] {\n    return this.r;\n  }\n\n  // call this function to read the final state\n  // call next() after this will cause undefined behavior\n  finalSample(): T[] {\n    // TODO: shuffle the output\n    shuffleArray(this.r);\n    this.finished = true;\n    return this.r;\n  }\n}\n\n// shuffle array in-place\nfunction shuffleArray(array: any[]): void {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nexport { StreamSampler, indexedCombination, combinationIndex, choose, isDefined, addId }","// datatypes used in generator model\n\ntype Faction = \"GDI\" | \"Nod\";\ntype Building = \"Infantry\" | \"Vehicle\" | \"Air\" | \"Tech\" | \"Commander\";\n\n// this is a incomplete list\ninterface Unit {\n  name: string;\n  faction: Faction;\n  building: Building;\n  cost: number;\n}\n\ninterface Commander extends Unit {\n  name: string;\n  faction: Faction;\n  building: \"Commander\";\n  cost: number\n}\n\ninterface Deck {\n  faction: Faction;\n  commander: Unit;\n  units: Unit[];\n}\n\n// generation request\ninterface Request {\n  faction: Faction | \"random\";\n  name: string;\n  validateFn: SerializedFunction<() => DeckValidationFunction>; // serialized function\n  numDecks: number,\n}\n\n// generation response\ninterface Response {\n  request: Request;\n  result: Deck[];\n  count: number;\n  error?: string;\n}\n\nclass SerializedFunction<T extends Function> {\n  readonly data: string;\n  constructor(fn: T) {\n    this.data = fn.toString();\n  }\n\n  deserialize(): T {\n    // eslint-disable-next-line no-new-func\n    return Function(`'use strict'; return (${this.data})`)();\n  }\n\n  static deserialize<U extends Function>(sf: SerializedFunction<U>): U {\n    // eslint-disable-next-line no-new-func\n    return Function(`'use strict'; return (${sf.data})`)();\n  }\n}\n\ntype DeckValidationFunction = (deck: Deck) => boolean;\n\ntype ProgressCallback = (progress: number) => void;\n\n// TODO: implement iterator\ninterface DeckDB /*extends Iterable<Deck>*/ {\n  readonly units: Unit[];\n  readonly commanders: Unit[];\n  readonly size: number;\n  get: (index: number) => Deck;\n  getIndex: (deck: Deck) => number;\n}\n\ninterface DeckGenerator {\n  generate: (request: Request[]) => Response[];\n}\n\nexport type { Faction, Building, Commander, Unit, Deck, DeckDB, DeckValidationFunction, ProgressCallback, Request, Response, DeckGenerator };\nexport { SerializedFunction };\n","import { Faction, Unit, Deck } from './types';\n\n// this class implements the Deck interface\n// it also serve as a standard library for clients (who writes validateFn) to use\nclass DeckImpl implements Deck {\n  readonly faction: Faction;\n  readonly commander: Unit;\n  readonly units: Unit[];\n\n  constructor(faction: Faction, commander: Unit, units: Unit[]) {\n    this.faction = faction;\n    this.commander = commander;\n    this.units = units;\n  }\n\n  // general deck building functions\n\n  hasCommander(name: string): boolean {\n    return this.commander.name === name;\n  }\n\n  containsUnitsByName(names: string[]): boolean {\n    return names.every(mcu => this.units.map(u => u.name).includes(mcu));\n  }\n\n  containsUnitByName(name: string): boolean {\n    return this.containsUnitsByName([name]);\n  }\n\n  // unit predicates\n\n  allUnitsThat(fn: (u: Unit) => boolean): boolean {\n    return this.units.every(fn);\n  }\n\n  someUnitsThat(fn: (u: Unit) => boolean): boolean {\n    return this.units.some(fn);\n  }\n\n  // n between 0 to 6 inclusive\n  nUnitsThat(n: number, fn: (u: Unit) => boolean): boolean {\n    return this.units.filter(fn).length === n;\n  }\n\n  // range are 2 numbers, from 0 to 6 inclusive\n  rangeUnitsThat(range: [number, number], fn: (u: Unit) => boolean): boolean {\n    const res = this.units.filter(fn).length;\n    return res >= range[0] && res <= range[1];\n  }\n\n  atLeastNUnitsThat(n: number, fn: (u: Unit) => boolean): boolean {\n    return this.rangeUnitsThat([n, 6], fn);\n  }\n\n  atMostNUnitsThat(n: number, fn: (u: Unit) => boolean): boolean {\n    return this.rangeUnitsThat([0, n], fn);\n  }\n\n  // whole deck predicate helpers\n\n  totalUnitsCost(n: number): number {\n    return this.units.reduce((acc, u) => {\n      acc += u.cost;\n      return acc;\n    }, 0);\n  }\n}\n\nexport { DeckImpl };","import { addId, choose, combinationIndex, indexedCombination, StreamSampler } from \"./utils\";\n\nimport { Faction, Unit, Deck, DeckValidationFunction, ProgressCallback, Request, Response, DeckDB, DeckGenerator } from \"./types\";\nimport { SerializedFunction } from \"./types\";\nimport { DeckImpl } from \"./deck\";\n\n// Request is immutable\nclass RequestImpl implements Request {\n  readonly faction: Faction | \"random\";\n  readonly name: string;\n  readonly validateFn: SerializedFunction<() => DeckValidationFunction>;\n  readonly numDecks: number;\n\n  constructor(faction: Faction | \"random\", name: string, validateFn: SerializedFunction<() => DeckValidationFunction>, numDecks: number) {\n    this.faction = faction;\n    this.name = name;\n    this.validateFn = validateFn;\n    this.numDecks = numDecks;\n  }\n}\n\n// Session describes the run state for each request (private to generator)\n// Session is not transferrable (i.e., cannot be sent to other threads)\nclass Session {\n  readonly request: Request;\n  readonly validateFn: DeckValidationFunction;\n  readonly sampler: StreamSampler<Deck>;\n  count: number;\n\n  constructor(request: Request) {\n    // console.log(request);\n    this.request = request;\n    // use static method here since prototype method will be lost after structuredClone\n    this.validateFn = SerializedFunction.deserialize(request.validateFn)();\n    // this.validateFn = request.validateFn.deserialize()();\n    this.sampler = new StreamSampler(request.numDecks);\n    this.count = 0;\n  }\n\n  // call this method to finalize this session, it will create a Response\n  // do NOT attempt to use a session object after it has been finalized\n  finalize(): Response {\n    return new ResponseImpl(this.request, this.sampler.finalSample(), this.count);\n  }\n\n  // finalize a session with error\n  finalizeWithError(error: string): Response {\n    return new ResponseImpl(this.request, [], -1, error);\n  }\n}\n\n// response is immutable\nclass ResponseImpl implements Response {\n  readonly request: Request;\n  readonly result: Deck[];\n  readonly count: number;\n  readonly error?: string;\n\n  constructor(request: Request, result: Deck[], count: number, error?: string) {\n    this.request = request;\n    this.result = result;\n    this.count = count;\n    this.error = error;\n  }\n}\n\nconst UNIT_PER_DECK = 6;\n// sort by building first, then cost, then name\nconst BUILDING_ORDER = {\"Infantry\": 0, \"Vehicle\": 1, \"Air\": 2, \"Tech\": 3, \"Commander\": 4};\nconst ORDER_WITHIN_DECK = (a: Unit, b: Unit): number => {\n  if (BUILDING_ORDER[a.building] !== BUILDING_ORDER[b.building]) {\n    return BUILDING_ORDER[a.building] - BUILDING_ORDER[b.building];\n  } else if (a.cost !== b.cost) {\n    return a.cost - b.cost;\n  } else {\n    return a.name > b.name ? 1 : -1;\n  }\n}\n\n// Commander order seem quite arbitrary in Rivals, so we sort them in predefiend (hardcode) order as appeared in game\nconst Nod_Commanders = [\"Seth\", \"Kane\", \"Jade\", \"Oxanna\"];\nconst GDI_Commanders = [\"Lt. Strongarm\", \"Dr. Liang\", \"Cdr. McNeil\", \"Gen. Solomon\", \"Col. Jackson\"];\n// assuming Unit being compared are Commanders\n// assuming Unit being compared are in the same faction\nconst COMMANDER_ORDER = (a: Unit, b: Unit): number => {\n  if (a.building !== \"Commander\" || b.building !== \"Commander\" || a.faction !== b.faction) {\n    console.log(a)\n    console.log(b)\n    throw new Error(\"Invalid comparison\");\n  }\n  let lst = a.faction === \"GDI\" ? GDI_Commanders : Nod_Commanders;\n  let aIdx = lst.findIndex(v => v === a.name); // should not be -1\n  let bIdx = lst.findIndex(v => v === b.name); // should not be -1\n  if (aIdx === -1 || bIdx === -1) {\n    throw new Error(`Commander ${a.name} or ${b.name} not found`);\n  }\n  return aIdx - bIdx;\n}\n\nclass DeckDBImpl {\n  readonly units: Unit[];\n  readonly commanders: Unit[];\n  readonly size: number;\n  private readonly unitsReverseMap: Map<string, number>;\n  private readonly commandersReverseMap: Map<string, number>;\n\n  constructor(units: Unit[], commanders: Unit[]) {\n    // sort by order within deck\n    this.units = addId(units.sort(ORDER_WITHIN_DECK));\n    // console.log(this.units);\n    this.commanders = addId(commanders.sort(COMMANDER_ORDER));\n    this.size = choose(units.length, UNIT_PER_DECK) * commanders.length;\n    let map = new Map();\n    units.forEach((unit, index) => map.set(unit.name, index));\n    this.unitsReverseMap = map;\n    map = new Map();\n    commanders.forEach((unit, index) => map.set(unit.name, index));\n    this.commandersReverseMap = map;\n  }\n\n  // get a deck given an index\n  get(idx: number): Deck {\n    if (idx < 0 || idx >= this.size) {\n      throw new Error(`index out of bound: ${idx} is not in range [0, ${this.size})`);\n    }\n\n    const unitsIdx = Math.floor(idx / this.commanders.length);\n    const commanderIdx = idx % this.commanders.length;\n\n    const resUnits = indexedCombination(this.units.length, UNIT_PER_DECK, unitsIdx).map(d => this.units[d]);\n    const resCommander = this.commanders[commanderIdx];\n    return new DeckImpl(resCommander.faction, resCommander, resUnits);\n  }\n\n  // get the index of a deck\n  // TODO: test this method\n  getIndex(deck: Deck): number {\n    const unitsIdx = deck.units.map(d => this.unitsReverseMap.get(d.name))\n                              .filter((d): d is number => typeof d !== undefined);\n    const commanderIdx = this.commandersReverseMap.get(deck.commander.name);\n    if (unitsIdx.length !== UNIT_PER_DECK || commanderIdx === undefined) {\n      throw new Error(\"invalid deck or not part of this database\");\n    }\n\n    return combinationIndex(unitsIdx, this.units.length) * this.commanders.length + commanderIdx;\n  }\n\n  // there seem to be some issue with iterator types\n  // TODO: implements iterator\n  // [Symbol.iterator](): Iterator<Deck> {\n  //   let index: number = 0;\n  //   return {\n  //     next: () => {\n  //       if (index >= this.size) {\n  //         return { done: true };\n  //       } else {\n  //         const idx = index;\n  //         index += 1;\n  //         return { value: this.get(idx), done: false };\n  //       } \n  //     }\n  //   }\n  // }\n}\n\n// TODO: test this\nclass DeckDBUnion implements DeckDB {\n  readonly units: Unit[];\n  readonly commanders: Unit[];\n  readonly size: number;\n  private readonly dbs: DeckDB[];\n\n  // assume each deckDB added has no duplicate units or commanders\n  constructor(dbs: DeckDB[]) {\n    this.dbs = dbs;\n    const totalSize: number = dbs.reduce((acc, db) => { acc += db.size; return acc; }, 0);\n    this.size = totalSize;\n    let units: Unit[] = [];\n    units.concat(...this.dbs.map((db: DeckDB) => db.units));\n    this.units = units;\n    let commanders: Unit[] = [];\n    commanders.concat(...this.dbs.map((db: DeckDB) => db.commanders));\n    this.commanders = commanders;\n  }\n\n  // lookup deck sequentially in dbs\n  get(index: number): Deck {\n    if (index < 0 || index >= this.size) {\n      throw new Error(\"index out of bound\");\n    }\n    let tmpIdx = 0;\n    while (index >= this.dbs[tmpIdx].size) {\n      index -= this.dbs[tmpIdx].size;\n      tmpIdx += 1;\n    }\n    return this.dbs[tmpIdx].get(index);\n  }\n\n  getIndex(deck: Deck): number {\n    throw new Error(\"operation not supported\");\n  }\n}\n\nclass AbstractDeckGenerator implements DeckGenerator {\n  // requests is an array of Requests object\n  // deckDB is an DeckDB object\n  // assume requests has is using the faction that DeckDB contains\n  // progressCb is called every 1% of all decks are processed, parameter is 1-100\n  generateCustom(requests: Request[], deckDB: DeckDB, progressCb?: ProgressCallback): Response[] {\n    if (requests.length > 0) {\n      // console.log(\"generateCustom called\");\n      // initialize each session\n      const sessions: Session[] = requests.map(d => new Session(d));\n      // console.log(sessions[0].validateFn);\n\n      let progress = 1;\n\n      // loop over all decks, sampling for each session\n      for (let i = 0; i < deckDB.size; i++) {\n        const deck = deckDB.get(i);\n        // TODO: all sessions will fail if any validateFn throw an exception\n        // this is not a perfect solution but works\n        try {\n          sessions.forEach(d => {\n            if (d.validateFn(deck)) {\n              d.sampler.next(deck);\n              d.count += 1;\n            }\n          });\n        } catch (e) {\n          return sessions.map(d => d.finalizeWithError(`Error in ${d.request.name}: ${e}`));\n        }\n        if (i / deckDB.size * 100 >= progress) {\n          if (progressCb !== undefined) {\n            progressCb(progress);\n            // console.log(\"progress called in worker \" + progress.toString())\n          }\n          progress += 1;\n        }\n      }\n      if (progressCb !== undefined) {\n        progressCb(100);\n      }\n\n      return sessions.map(d => d.finalize());\n    } else {\n      return [];\n    }\n  }\n\n  generate(request: Request[]): Response[] {\n    console.log(`cannot call generate() on abstractDeckGenerator`);\n    throw new Error(`cannot call generate() on abstractDeckGenerator`);\n  }\n}\n\nexport { DeckDBImpl, DeckDBUnion, AbstractDeckGenerator };\n\n// only for debug and testing\nexport { DeckImpl, RequestImpl };\n","import { Unit, Faction, Building } from \"./types\";\n\ntype Rarity = \"Common\" | \"Rare\" | \"Epic\";\n\ntype UnitType = \"Infantry\" | \"Vehicle\" | \"Air\";\n\ntype Speed = null | \"Slowest\" |\"Slow\" | \"Average\" | \"Fast\" | \"Faster\" | \"Fastest\";\n// const speed = [\"Slowest\", \"Slow\", \"Average\", \"Fast\", \"Faster\", \"Fastest\"]; // to compare speed\nconst speed = { \"Slowest\": 1, \"Slow\": 2, \"Average\": 3, \"Fast\": 4, \"Faster\": 5, \"Fastest\": 6 }; // to compare speed\n\nconst SPEED_ORDER = (a: Speed, b: Speed) => {\n  if (a !== null && b !== null) {\n    return speed[a] - speed[b];\n  } else if (a === null && b !== null) {\n    return -1;\n  } else if (a !== null && b === null) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\n\nconst requiredFields = ['name', 'squadSize', 'unitType', 'cost', 'building', 'speed', 'faction', 'rarity', 'antiInfantry', 'antiVehicle', 'antiAir'];\n\nclass UnitImpl implements Unit {\n  readonly name: string;\n  readonly faction: Faction;\n  readonly building: Building;\n  readonly cost: number;\n  readonly unitType: UnitType;\n  readonly rarity: Rarity;\n  readonly speed: Speed;\n  readonly squadSize: number;\n  readonly antiInfantry: number;\n  readonly antiVehicle: number;\n  readonly antiAir: number;\n  [key: string]: unknown; // other fields\n\n  constructor(unitData: any) {\n    this.name = unitData.name;\n    this.faction = unitData.faction;\n    this.building = unitData.building;\n    this.cost = unitData.cost;\n    this.unitType = unitData.unitType;\n    this.rarity = unitData.rarity;\n    this.speed = unitData.speed;\n    this.squadSize = unitData.squadSize;\n    this.antiInfantry = unitData.antiInfantry;\n    this.antiVehicle = unitData.antiVehicle;\n    this.antiAir = unitData.antiAir;\n\n    // copy other fields\n    for (let [k, v] of Object.entries(unitData)) {\n      if (!requiredFields.includes(k)) {\n        this[k] = v;\n      }\n    }\n  }\n\n  // unit predicates\n  isInfantry(): boolean {\n    return this.unitType === \"Infantry\";\n  }\n\n  isVehicle(): boolean {\n    return this.unitType === \"Vehicle\";\n  }\n\n  isAir(): boolean {\n    return this.unitType === \"Air\";\n  }\n\n  isTech(): boolean {\n    return this.building === \"Tech\";\n  }\n\n  canAttackInfantry(): boolean {\n    return this.antiInfantry >= 0;\n  }\n\n  canAttackVehicle(): boolean {\n    return this.antiVehicle >= 0;\n  }\n\n  canAttackAir(): boolean {\n    return this.antiAir >= 0;\n  }\n\n  strongAgainstInfantry(): boolean {\n    return this.antiInfantry >= 1;\n  }\n\n  strongAgainstVehicle(): boolean {\n    return this.antiVehicle >= 1;\n  }\n\n  strongAgainstAir(): boolean {\n    return this.antiAir >= 1;\n  }\n\n  isSquad(): boolean {\n    return this.squadSize > 1;\n  }\n}\n\nexport { UnitImpl };\n","import { Unit, Deck, Request, Response, DeckDB, ProgressCallback } from \"../model/types\";\nimport { AbstractDeckGenerator, DeckDBImpl, DeckDBUnion } from \"../model/model\";\nimport { UnitImpl } from \"../model/unit\";\n\n// actual implementation of the deck generator, plus a few useful helper methods\nclass DefaultDeckGenerator extends AbstractDeckGenerator {\n  readonly GDI_DECKS: DeckDB;\n  readonly NOD_DECKS: DeckDB;\n  readonly ALL_DECKS: DeckDB;\n\n  constructor(GDI_UNITS: Unit[], GDI_COMMANDERS: Unit[], NOD_UNITS: Unit[], NOD_COMMANDERS: Unit[]) {\n    super();\n    this.GDI_DECKS = new DeckDBImpl(GDI_UNITS.map(d => new UnitImpl(d)), GDI_COMMANDERS.map(d => new UnitImpl(d)));\n    this.NOD_DECKS = new DeckDBImpl(NOD_UNITS.map(d => new UnitImpl(d)), NOD_COMMANDERS.map(d => new UnitImpl(d)));\n    this.ALL_DECKS = new DeckDBUnion([this.GDI_DECKS, this.NOD_DECKS]);\n  }\n\n  // only use this inside worker\n  async generate2(requests: Request[], progressCb?: ProgressCallback) {\n    if (progressCb !== undefined) {\n      // initialize the proxied callback (to fix the Firefox issue)\n      // https://github.com/GoogleChromeLabs/comlink/issues/538\n      await progressCb(0);\n    }\n    return this.generate(requests, progressCb);\n  }\n\n  generate(requests: Request[], progressCb?: ProgressCallback): Response[] {\n    // save the index first\n    const tmp: Map<Request, number> = new Map();\n    requests.forEach((r, index) => {\n      tmp.set(r, index);\n    });\n\n    const gdiRequests: Request[] = requests.filter(r => r.faction === \"GDI\");\n    const nodRequests: Request[] = requests.filter(r => r.faction === \"Nod\");\n    const randomRequests: Request[] = requests.filter(r => r.faction === \"random\");\n\n    const gdiResponses: Response[] = this.generateCustom(gdiRequests, this.GDI_DECKS, progressCb);\n    const nodResponses: Response[] = this.generateCustom(nodRequests, this.NOD_DECKS, progressCb);\n    const randomResponses: Response[] = this.generateCustom(randomRequests, this.ALL_DECKS, progressCb);\n\n    let responses: Response[] = [];\n    gdiResponses.forEach(r => {\n      // this works because r.request is always in the map we created\n      responses[tmp.get(r.request) as number] = r;\n    });\n    nodResponses.forEach(r => {\n      responses[tmp.get(r.request) as number] = r;\n    });\n    randomResponses.forEach(r => {\n      responses[tmp.get(r.request) as number] = r;\n    });\n    return responses;\n  }\n\n  generateAsync(requests: Request[], responseFn: (response: Response[]) => void, progressCb?: ProgressCallback) {\n    const responses = this.generate(requests, progressCb);\n    responseFn(responses);\n  }\n\n  cancel() {\n    throw new Error(\"cannot cancel\");\n  }\n\n  // convert deck to a string that uniquely identifies it\n  getDeckId(deck: Deck): string {\n    const faction = deck.faction === \"GDI\" ? \"gdi\" : \"nod\";\n    const id = deck.faction === \"GDI\" ? this.GDI_DECKS.getIndex(deck) : this.NOD_DECKS.getIndex(deck);\n    return `${faction}-${id}`;\n  }\n\n  // TODO: test this function\n  getDeck(deckID: string): Deck {\n    const pattern = /^(gdi|nod)-([0-9]+)$/i;\n    const res = pattern.exec(deckID);\n    if (res === null) {\n      throw new Error(\"invalid deckID\");\n    } else {\n      const faction = res[1];\n      const value = parseInt(res[2]);\n      if (faction === \"gdi\") {\n        return this.GDI_DECKS.get(value);\n      } else {\n        return this.NOD_DECKS.get(value);\n      }\n    }\n  }\n}\n\nexport { DefaultDeckGenerator };\n","import { DefaultDeckGenerator } from \"./generator\";\nimport * as Comlink from \"comlink\";\n\n// this file is intended to run as worker script\nComlink.expose(DefaultDeckGenerator);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [4], function() { return __webpack_require__(4380); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"a58f482c\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t380: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkrivals_deck_generator\"] = self[\"webpackChunkrivals_deck_generator\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(4).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["addId","arr","key","map","d","idx","choose","n","k","Math","min","res","i","StreamSampler","randFn","random","r","finished","this","data","console","log","length","push","j","floor","array","shuffleArray","SerializedFunction","fn","toString","Function","sf","DeckImpl","faction","commander","units","name","names","every","mcu","u","includes","containsUnitsByName","some","filter","range","rangeUnitsThat","reduce","acc","cost","Session","request","validateFn","sampler","count","deserialize","numDecks","ResponseImpl","finalSample","error","result","BUILDING_ORDER","ORDER_WITHIN_DECK","a","b","building","Nod_Commanders","GDI_Commanders","COMMANDER_ORDER","Error","lst","aIdx","findIndex","v","bIdx","DeckDBImpl","commanders","size","unitsReverseMap","commandersReverseMap","sort","Map","forEach","unit","index","set","unitsIdx","commanderIdx","resUnits","item","pivot","indexedCombination","resCommander","deck","get","undefined","combination","item_in_check","offset","combinationIndex","DeckDBUnion","dbs","totalSize","db","concat","tmpIdx","AbstractDeckGenerator","requests","deckDB","progressCb","sessions","progress","next","e","finalizeWithError","finalize","requiredFields","UnitImpl","unitData","unitType","rarity","speed","squadSize","antiInfantry","antiVehicle","antiAir","Object","entries","DefaultDeckGenerator","GDI_UNITS","GDI_COMMANDERS","NOD_UNITS","NOD_COMMANDERS","GDI_DECKS","NOD_DECKS","ALL_DECKS","generate","tmp","gdiRequests","nodRequests","randomRequests","gdiResponses","generateCustom","nodResponses","randomResponses","responses","responseFn","id","getIndex","deckID","exec","value","parseInt","Comlink","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","chunkIds","priority","notFulfilled","Infinity","fulfilled","keys","splice","getter","__esModule","definition","o","defineProperty","enumerable","f","chunkId","Promise","all","promises","miniCssF","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","self","parentChunkLoadingFunction","bind","moreModules","runtime","pop","then"],"sourceRoot":""}